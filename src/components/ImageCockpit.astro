---
import { Image } from "astro:assets";
import { getOptimizedImage } from "../services/cockpit";

interface ImageData {
    _id: string;
    altText?: string;
    title?: string;
  }
interface Props {
  image: ImageData;
  hoverImage?: ImageData | null;
  width?: number;
  height?: number;
  resize?: 'thumbnail' | 'bestFit' | 'resize' | 'fitToWidth' | 'fitToHeight';
  quality?: number;
  format?: 'webp' | 'jpeg' | 'png';
  classes?: string;
  classesContainer?: string;
  legend?: boolean;
}

const { 
  image, 
  hoverImage = null, 
  width = 400, 
  height = 600, 
  resize = "bestFit", 
  quality = 70,
  format = "webp",
  classes = "", 
  classesContainer = "", 
  legend = false 
} = Astro.props;

if (!image?._id) {
  return null;
}

// Utilisation de la nouvelle fonction avec l'objet options
const optimizedUrl = await getOptimizedImage(image._id, {
  width,
  height,
  resize,
  quality,
  format
});

const optimizedHoverUrl = hoverImage?._id 
  ? await getOptimizedImage(hoverImage._id, {
      width,
      height,
      resize,
      quality,
      format
    })
  : null;

---

<figure class={`${classesContainer} relative group`}>
  <Image 
    class={`${classes} transition-opacity duration-300 ${optimizedHoverUrl ? 'group-hover:opacity-0' : ''}`} 
    src={optimizedUrl} 
    alt={image.altText ?? "image"} 
    width={width} 
    height={height} 
  />
  
  {optimizedHoverUrl && (
    <Image 
      class={`${classes} absolute top-0 left-0 transition-opacity duration-300 opacity-0 group-hover:opacity-100`} 
      src={optimizedHoverUrl} 
      alt={hoverImage?.altText ?? "image au survol"} 
      width={width} 
      height={height} 
    />
  )}
  {legend && (
    <figcaption>{image.title}</figcaption>
  )}
</figure>