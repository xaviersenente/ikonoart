---
import ImageCockpit from './ImageCockpit.astro';
interface CarouselImage {
  _id: string;
  altText?: string;
  width?: number;
  height?: number;
  resize?: string;
}
interface Props {
  images: CarouselImage[];
  type?: 'fade' | 'home' | 'product' | 'testimonial';
  perPage?: number;
  gap?: string;
  autoplay?: boolean;
  class?: string;
}

const { 
  images = [],
  type = 'fade',
  class: additionalClasses = ''
} = Astro.props;

// DÃ©terminer la classe CSS en fonction du type
const getCarouselClass = (type: string) => {
  switch (type) {
    case 'home':
      return 'home-carousel';
    case 'product':
      return 'product-carousel';
    case 'testimonial':
      return 'testimonial-carousel';
    case 'fade':
    default:
      return 'fade-carousel';
  }
};

const carouselClass = getCarouselClass(type);
---

<div 
  class={`splide ${carouselClass} ${additionalClasses}`} 
  role="group" 
  aria-label="Carrousel d'images"
>
  <div class="splide__track">
    <ul class="splide__list">
      {images.map((image) => (
        <li class="splide__slide">
          <ImageCockpit 
            image={{ _id: image._id, altText: image.altText }} 
            width={1800} 
            height={750} 
            resize={image.resize || "thumbnail"} 
            classes="w-full h-auto object-cover" 
          />
        </li>
      ))}
    </ul>
  </div>
</div>