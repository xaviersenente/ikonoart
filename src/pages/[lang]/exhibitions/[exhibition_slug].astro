---
import Layout from "../../../layouts/Layout.astro";
import ImageCockpit from '../../../components/ImageCockpit.astro';
import ArtworkCard from '../../../components/ArtworkCard.astro';
import { languages } from '../../../i18n/ui';
import { formatDateRange } from '../../../js/dateFormatter.js';
import { getExhibitions, getExhibitionById, getArtworksByExhibition } from "../../../services/collections";


import type { Artwork, Exhibition } from '../../../types/types';

// Fonction pour générer les chemins statiques pour chaque artiste et langue
export async function getStaticPaths() {
  const exhibitions = await getExhibitions();  // Récupère tous les artistes
  // Créer un tableau de chemins pour chaque artiste et chaque langue
  return exhibitions.flatMap(exhibition => 
    Object.keys(languages).map(lang => ({
      params: { lang, exhibition_slug: exhibition.slug },
      props: { exhibition_id: exhibition._id, lang }, 
    }))
  );
}
const currentLocale = Astro.currentLocale;
const { exhibition_slug, lang } = Astro.params;
const { exhibition_id } = Astro.props;
const exhibition: Exhibition | null = await getExhibitionById(exhibition_id, lang);

// Récupération des œuvres complètes de l'exposition
const exhibitionArtworks: Artwork[] = await getArtworksByExhibition(exhibition_id, lang);
// Formatage des dates de début et de fin
const dateRange = formatDateRange(exhibition?.start_date, exhibition?.end_date);
// const artist = artwork.artist?._id ? await getArtistById(artwork.artist._id, lang) : null;
console.log(exhibitionArtworks);
---

<Layout title={ exhibition?.title } currentLocale={lang}>
  <main class="main-container mt-38">
    <div class="mb-6">
      <a href="javascript:history.back()" class="inline-flex items-center text-gray-600 hover:text-black">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mr-2">
          <path d="M19 12H5M12 19l-7-7 7-7"/>
        </svg>
        Retour
      </a>
    </div>
    <div>
      <h1 class="text-3xl mb-4">{exhibition?.title}</h1>
      <h3>{dateRange}</h3>

      <ImageCockpit 
        image={exhibition?.image} 
        width={1800} 
        height={750} 
        resize="thumbnail"
        classes="w-full h-auto object-cover"  />
    </div>
    <div set:html={exhibition?.description}></div>
    {exhibitionArtworks && exhibitionArtworks.length > 0 && (
      <div class="card-grid">
        {exhibitionArtworks.map(artwork => (
          <ArtworkCard artwork={artwork} currentLocale={currentLocale} />
        ))}
      </div>
    )}
  </main>

</Layout>