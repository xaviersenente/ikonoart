---
import Layout from "../../../layouts/Layout.astro";
import ImageCockpit from '../../../components/ImageCockpit.astro';
import ArtworkCard from '../../../components/ArtworkCard.astro';
import SectionTitle from '../../../components/SectionTitle.astro';
import { languages } from '../../../i18n/ui';
import { useTranslations, getCurrentLocale } from '../../../i18n/utils';
import { formatDateRange } from '../../../js/dateFormatter.js';
import { getExhibitions, getExhibitionById, getArtworksByExhibition } from "../../../services/collections";


import type { Artwork, Exhibition } from '../../../types/types';
import type { Locale } from '../../../i18n/ui';

// Fonction pour générer les chemins statiques pour chaque artiste et langue
export async function getStaticPaths() {
  const exhibitions: Exhibition[] = await getExhibitions();  // Récupère tous les artistes
  // Créer un tableau de chemins pour chaque artiste et chaque langue
  return exhibitions.flatMap(exhibition => 
    Object.keys(languages).map(lang => ({
      params: { lang, exhibition_slug: exhibition.slug },
      props: { exhibition_id: exhibition._id }, 
    }))
  );
}

const { exhibition_slug, lang } = Astro.params as { exhibition_slug: string; lang: string };
const { exhibition_id } = Astro.props as { exhibition_id: string };

const currentLocale: Locale = getCurrentLocale(lang as Locale);
const t = useTranslations(currentLocale);

const exhibition: Exhibition | null = await getExhibitionById(exhibition_id, currentLocale);

// Récupération des œuvres complètes de l'exposition
const exhibitionArtworks: Artwork[] = await getArtworksByExhibition(exhibition_id, currentLocale);

// Formatage des dates de début et de fin
const dateRange = formatDateRange(exhibition?.start_date, exhibition?.end_date);

---

<Layout title={ exhibition?.title || "Exhibition" } currentLocale={currentLocale}>
  <main class="main-container mt-16 lg:mt-34">
    <nav class="mb-6" aria-label="Breadcrumb">
      <ol class="flex items-center space-x-2 text-sm">
        <li><a href={`/${currentLocale}`} class="text-gray-600 hover:text-black">{t('common.home')}</a></li>
        <li class="text-gray-400">/</li>
        <li><a href={`/${currentLocale}/artworks`} class="text-gray-600 hover:text-black">{t('header.exhibitions')}</a></li>
        <li class="text-gray-400">/</li>
        <li class="text-gray-900">{exhibition?.title}</li>
      </ol>
    </nav>

    <div class="grid gap-10 grid-cols-1 lg:grid-cols-3">
      <div class="lg:row-span-2 max-lg:row-start-2">
        <h1 class="text-3xl mb-4">{exhibition?.title}</h1>
        <h3>{dateRange}</h3>
        <div class="wysiwyg border-t border-t-gray-300 mt-4 pt-4 text-sm" set:html={exhibition?.description}></div>
      </div>

      <div class="lg:col-span-2 max-lg:row-start-1">
        <ImageCockpit 
          image={exhibition?.image} 
          width={1600} 
          height={1600} 
          resize="bestFit" 
          classes="max-h-[calc(100dvh-250px)] w-auto"
          priority={true}
          lazy={false}
          quality={70}
          sizes="(max-width: 1024px) 100vw, 66vw"
        />
      </div>
    </div>

    
    {exhibitionArtworks && exhibitionArtworks.length > 0 && (
      <SectionTitle currentLocale={currentLocale} text="pageExhibitions.works"/>
      <div class="card-grid">
        {exhibitionArtworks.map((artwork, index) => (
          <ArtworkCard 
            artwork={artwork} 
            currentLocale={currentLocale}
            priority={index < 6}
          />
        ))}
      </div>
    )}
  </main>

</Layout>