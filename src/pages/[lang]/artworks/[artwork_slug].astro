---
import Layout from "../../../layouts/Layout.astro";
import ImageCockpit from '../../../components/ImageCockpit.astro';
import { languages } from '../../../i18n/ui';
import { getArtworks, getArtworkById, getArtistById } from "../../../services/collections";

// Fonction pour générer les chemins statiques pour chaque artiste et langue
export async function getStaticPaths() {
  const artworks = await getArtworks();  // Récupère tous les artistes
  // Créer un tableau de chemins pour chaque artiste et chaque langue
  return artworks.flatMap(artwork => 
    Object.keys(languages).map(lang => ({
      params: { lang, artwork_slug: artwork.slug },
      props: { artwork_id: artwork._id, lang }, 
    }))
  );
}

const { artwork_slug, lang } = Astro.params;
const { artwork_id } = Astro.props;
const artwork = await getArtworkById(artwork_id, lang);
const artist = artwork.artist?._id ? await getArtistById(artwork.artist._id, lang) : null;
// const formattedDescription = artwork?.description?.replace(/\n/g, '<br>');
---

<Layout title={ artwork?.title } currentLocale={lang}>
  <main class="main-container mt-38">
    <div class="mb-6">
      <a href="javascript:history.back()" class="inline-flex items-center text-gray-600 hover:text-black">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mr-2">
          <path d="M19 12H5M12 19l-7-7 7-7"/>
        </svg>
        Retour
      </a>
    </div>
    <div class="grid gap-10 lg:grid-cols-3">
      <div>
        <h1 class="text-3xl mb-4">
          {artist ? (
            <a href={`/${lang}/artists/${artist.slug}`} class="hover:underline">
              {artist.name}
            </a>
          ) : "Artiste inconnu"}
        </h1>
        <h2 class="text-xl mb-4">
          <span class="italic">{ artwork?.title }</span>{ artwork?.year && ( <span> – { artwork?.year }</span> )}
        </h2>
        <div set:html={ artwork?.description }></div> 
        <p>{ artwork?.size }</p>
        
        <!-- Bouton pour ouvrir le formulaire d'enquête -->
        <div class="mt-6">
          <button 
            id="enquiry-btn"
            class="bg-black text-white px-6 py-3 hover:bg-gray-800 transition-colors duration-200 inline-flex items-center gap-2"
          >
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"/>
              <polyline points="22,6 12,13 2,6"/>
            </svg>
            Enquire about available work
          </button>
        </div>
      </div>
      <ImageCockpit image={artwork?.image} width={1600} height={1600} resize="bestFit" classesContainer="col-span-2" classes="max-h-[75dvh] w-auto" />
    </div>
  </main>

  <!-- Pop-up formulaire d'enquête -->
  <div id="enquiry-popup" class="fixed inset-0 z-50 hidden">
    <!-- Overlay -->
    <div class="absolute inset-0 bg-black/50"></div>
    
    <!-- Panel coulissant -->
    <div class="absolute top-0 right-0 h-full w-full max-w-md bg-white shadow-xl transform translate-x-full transition-transform duration-300 ease-in-out">
      <!-- Header -->
      <div class="flex items-center justify-between p-6 border-b border-gray-200">
        <h3 class="text-lg font-semibold">Enquiry about artwork</h3>
        <button id="close-popup" class="text-gray-400 hover:text-gray-600">
          <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <line x1="18" y1="6" x2="6" y2="18"/>
            <line x1="6" y1="6" x2="18" y2="18"/>
          </svg>
        </button>
      </div>
      
      <!-- Contenu -->
      <div class="p-6 overflow-y-auto h-full pb-24">
        <!-- Informations sur l'œuvre -->
        <div class="mb-6 p-4 bg-gray-50 rounded-lg">
          <h4 class="font-semibold mb-2">Artwork details:</h4>
          <p class="text-sm text-gray-600">
            <strong>Artist:</strong> {artist?.name || "Unknown artist"}
          </p>
          <p class="text-sm text-gray-600">
            <strong>Title:</strong> {artwork?.title}
          </p>
          {artwork?.year && (
            <p class="text-sm text-gray-600">
              <strong>Year:</strong> {artwork.year}
            </p>
          )}
          <p class="text-sm text-gray-600">
            <strong>ID:</strong> {artwork_id}
          </p>
        </div>
        
        <!-- Formulaire -->
        <form 
          name="artwork-enquiry" 
          method="POST" 
          data-netlify="true" 
          data-netlify-honeypot="bot-field"
          action="/thank-you"
          class="space-y-4"
          id="enquiry-form"
        >
          <!-- Champ anti-spam caché -->
          <input type="hidden" name="bot-field" />
          
          <!-- Champs cachés pour les informations de l'œuvre -->
          <input type="hidden" name="artwork-id" value={artwork_id} />
          <input type="hidden" name="artwork-title" value={artwork?.title} />
          <input type="hidden" name="artist-name" value={artist?.name || "Unknown artist"} />
          <input type="hidden" name="artwork-year" value={artwork?.year || ""} />
          <input type="hidden" name="page-url" value={Astro.url.href} />
          
          <!-- Nom -->
          <div>
            <label for="name" class="block text-sm font-medium text-gray-700 mb-2">
              Full Name *
            </label>
            <input 
              type="text" 
              id="name" 
              name="name" 
              required 
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-black focus:border-transparent"
            />
          </div>
          
          <!-- Email -->
          <div>
            <label for="email" class="block text-sm font-medium text-gray-700 mb-2">
              Email Address *
            </label>
            <input 
              type="email" 
              id="email" 
              name="email" 
              required 
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-black focus:border-transparent"
            />
          </div>
          
          <!-- Téléphone -->
          <div>
            <label for="phone" class="block text-sm font-medium text-gray-700 mb-2">
              Phone Number
            </label>
            <input 
              type="tel" 
              id="phone" 
              name="phone" 
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-black focus:border-transparent"
            />
          </div>
          
          <!-- Type d'enquête -->
          <div>
            <label for="enquiry-type" class="block text-sm font-medium text-gray-700 mb-2">
              Enquiry Type *
            </label>
            <select 
              id="enquiry-type" 
              name="enquiry-type" 
              required 
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-black focus:border-transparent"
            >
              <option value="">Select an option</option>
              <option value="purchase">Purchase enquiry</option>
              <option value="rental">Rental enquiry</option>
              <option value="exhibition">Exhibition enquiry</option>
              <option value="valuation">Valuation enquiry</option>
              <option value="other">Other</option>
            </select>
          </div>
          
          <!-- Message -->
          <div>
            <label for="message" class="block text-sm font-medium text-gray-700 mb-2">
              Message *
            </label>
            <textarea 
              id="message" 
              name="message" 
              rows="4" 
              required 
              placeholder="Please provide details about your enquiry..."
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-black focus:border-transparent resize-none"
            ></textarea>
          </div>
          
          <!-- Bouton d'envoi -->
          <div class="pt-4">
            <button 
              type="submit" 
              class="w-full bg-black text-white px-6 py-3 hover:bg-gray-800 transition-colors duration-200 disabled:opacity-50 disabled:cursor-not-allowed"
              id="submit-btn"
            >
              Send Enquiry
            </button>
          </div>
        </form>
      </div>
    </div>
  </div>
</Layout>

<style>
  /* Styles pour améliorer l'apparence du formulaire */
  .enquiry-popup-open {
    transform: translateX(0);
  }
  
  /* Responsive */
  @media (max-width: 768px) {
    #enquiry-popup .max-w-md {
      max-width: 90%;
    }
  }
</style>

<script>
  // Fonction principale d'initialisation
  function initializeEnquiryPopup() {
    const enquiryBtn = document.getElementById('enquiry-btn');
    const popup = document.getElementById('enquiry-popup');
    const closeBtn = document.getElementById('close-popup');
    const panel = popup?.querySelector('.absolute.top-0.right-0');
    const form = popup?.querySelector('form');
    const submitBtn = document.getElementById('submit-btn');
    
    // Vérifier si les éléments existent
    if (!enquiryBtn || !popup || !closeBtn) {
      return;
    }
    
    // Fonction pour ouvrir la popup
    function openPopup() {
      if (popup && panel) {
        popup.classList.remove('hidden');
        // Petit délai pour permettre l'affichage avant l'animation
        setTimeout(() => {
          panel.classList.remove('translate-x-full');
        }, 10);
        
        // Empêcher le scroll du body
        document.body.style.overflow = 'hidden';
      }
    }
    
    // Fonction pour fermer la popup
    function closePopup() {
      if (popup && panel) {
        panel.classList.add('translate-x-full');
        // Attendre la fin de l'animation avant de cacher
        setTimeout(() => {
          popup.classList.add('hidden');
        }, 300);
        
        // Restaurer le scroll du body
        document.body.style.overflow = 'auto';
      }
    }
    
    // Nettoyer les anciens event listeners pour éviter les doublons
    enquiryBtn.removeEventListener('click', openPopup);
    closeBtn.removeEventListener('click', closePopup);
    
    // Event listeners
    enquiryBtn.addEventListener('click', openPopup);
    closeBtn.addEventListener('click', closePopup);
    
    // Fermer en cliquant sur l'overlay
    popup.addEventListener('click', function(e) {
      if (e.target === popup) {
        closePopup();
      }
    });
    
    // Fermer avec la touche Escape
    const escapeHandler = function(e) {
      if (e.key === 'Escape' && !popup?.classList.contains('hidden')) {
        closePopup();
      }
    };
    
    // Nettoyer l'ancien handler et ajouter le nouveau
    document.removeEventListener('keydown', escapeHandler);
    document.addEventListener('keydown', escapeHandler);
    
    // Gestion du formulaire
    if (form) {
      form.addEventListener('submit', function(e) {
        // Option 1: Netlify Forms basique (gratuit)
        // Le formulaire est envoyé normalement vers Netlify Forms
        if (submitBtn) {
          submitBtn.disabled = true;
          submitBtn.textContent = 'Sending...';
        }
        
        // Option 2: Envoi vers votre propre endpoint
        // Décommentez cette section si vous voulez gérer l'envoi vous-même
        /*
        e.preventDefault();
        sendToCustomEndpoint(new FormData(form));
        */
        
        // Option 3: Envoi vers un service tiers (EmailJS, Formspree, etc.)
        // Décommentez cette section si vous utilisez un service tiers
        /*
        e.preventDefault();
        sendToThirdPartyService(new FormData(form));
        */
      });
    }
    
    // Fonction pour envoyer vers votre propre endpoint
    async function sendToCustomEndpoint(formData) {
      try {
        const response = await fetch('/.netlify/functions/send-enquiry', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(Object.fromEntries(formData)),
        });
        
        if (response.ok) {
          window.location.href = '/thank-you';
        } else {
          throw new Error('Failed to send enquiry');
        }
      } catch (error) {
        console.error('Error:', error);
        alert('Sorry, there was an error sending your enquiry. Please try again.');
        if (submitBtn) {
          submitBtn.disabled = false;
          submitBtn.textContent = 'Send Enquiry';
        }
      }
    }
    
    // Fonction pour envoyer vers un service tiers (exemple avec EmailJS)
    async function sendToThirdPartyService(formData) {
      try {
        // Exemple avec EmailJS
        const templateParams = {
          artwork_id: formData.get('artwork-id'),
          artwork_title: formData.get('artwork-title'),
          artist_name: formData.get('artist-name'),
          artwork_year: formData.get('artwork-year'),
          page_url: formData.get('page-url'),
          name: formData.get('name'),
          email: formData.get('email'),
          phone: formData.get('phone'),
          enquiry_type: formData.get('enquiry-type'),
          message: formData.get('message'),
        };
        
        // Remplacez ces valeurs par vos propres clés EmailJS
        /*
        const response = await emailjs.send(
          'YOUR_SERVICE_ID',
          'YOUR_TEMPLATE_ID',
          templateParams,
          'YOUR_PUBLIC_KEY'
        );
        */
        
        window.location.href = '/thank-you';
      } catch (error) {
        console.error('Error:', error);
        alert('Sorry, there was an error sending your enquiry. Please try again.');
        if (submitBtn) {
          submitBtn.disabled = false;
          submitBtn.textContent = 'Send Enquiry';
        }
      }
    }
    
    // Gestion des erreurs Netlify
    if (window.location.search.includes('form=artwork-enquiry')) {
      // Formulaire soumis avec succès
      closePopup();
      
      // Optionnel : afficher un message de succès
      const successMessage = document.createElement('div');
      successMessage.className = 'fixed top-4 right-4 bg-green-500 text-white px-6 py-3 rounded-lg z-50';
      successMessage.textContent = 'Your enquiry has been sent successfully!';
      document.body.appendChild(successMessage);
      
      setTimeout(() => {
        successMessage.remove();
      }, 5000);
    }
  }
  
  // Initialisation au chargement de la page
  document.addEventListener('DOMContentLoaded', initializeEnquiryPopup);
  
  // Réinitialisation lors de la navigation côté client d'Astro
  document.addEventListener('astro:page-load', initializeEnquiryPopup);
  
  // Nettoyage lors du départ de la page
  document.addEventListener('astro:before-preparation', function() {
    // Restaurer le scroll du body si une popup était ouverte
    document.body.style.overflow = 'auto';
  });
</script>